# Create a Sankey diagram
sankeyPlot <- sankeyNetwork(Links = links, Nodes = nodes, Source = "Source",
Target = "Target", Value = "Freq", NodeID = "name",
fontSize = 12, nodeWidth = 30, fontFamily = "sans-serif",
colourScale=my_color)
# Display the Sankey diagram
sankeyPlot
library(ggalluvial)
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships)
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
theme_void() +
theme(legend.position = "none")
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#771122", "#117777", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
# Display the Sankey diagram
sankeyPlot
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
mutation_covariate_data$risk_scores
risk_score <- mutation_covariate_data$risk_scores
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = risk_score)
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
theme_void() +
theme(legend.position = "none")
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships, risk_score = risk_score)
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships, axis3 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
theme_void() +
theme(legend.position = "none")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships, axis3 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
sample_memberships
as.character(sample_memberships)
sample_memberships
sample_memberships
sample_memberships
typeof(sample_memberships)
sample_memberships <- as.factor(sample_memberships)
levels(sample_memberships) <- LETTERS[1:k_clust]
sample_memberships
colourys2 <- c("#DD7788", "#771122", "#117777", "#DDDD77")
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships)
# Create a table with the frequency of each combination
links <- as.data.frame(table(data))
# Create a nodes data frame
nodes <- data.frame(name = unique(c(as.character(data$cancer_type), as.character(data$sample_memberships))))
nodes$id <- 0:(nrow(nodes) - 1)
# Map the source and target values in the links data frame to the node IDs
links$Source <- match(links$cancer_type, nodes$name) - 1
links$Target <- match(links$sample_memberships, nodes$name) - 1
# Create a Sankey diagram
sankeyPlot <- sankeyNetwork(Links = links, Nodes = nodes, Source = "Source",
Target = "Target", Value = "Freq", NodeID = "name",
fontSize = 12, nodeWidth = 30, fontFamily = "sans-serif",
colourScale=my_color)
# Display the Sankey diagram
sankeyPlot
library(ggalluvial)
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships)
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum() +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
theme_void() +
theme(legend.position = "none")
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
######### again
risk_score <- mutation_covariate_data$risk_scores
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships, risk_score = risk_score)
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
levels(risk_score)
risk_score
as.factor(risk_score)
risk_score <- as.factor(risk_score)
levels(as.factor(risk_score))
factor(risk_score, levels = c("Adverse (ELN2022)", "Intermediate (ELN2022)", "Favorable (ELN2022)",
"Very High (IPSSM)", "High (IPSSM)", "Moderate High (IPSSM)",
"Moderate Low (IPSSM)", "Low (IPSSM)", "Very Low (IPSSM)"))
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships, risk_score = risk_score)
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
factor(risk_score, levels = c("Adverse (ELN2022)", "Intermediate (ELN2022)", "Favorable (ELN2022)",
"Very High (IPSSM)", "High (IPSSM)", "Moderate High (IPSSM)",
"Moderate Low (IPSSM)", "Low (IPSSM)", "Very Low (IPSSM)"))
risk_score <- factor(risk_score, levels = c("Adverse (ELN2022)", "Intermediate (ELN2022)", "Favorable (ELN2022)",
"Very High (IPSSM)", "High (IPSSM)", "Moderate High (IPSSM)",
"Moderate Low (IPSSM)", "Low (IPSSM)", "Very Low (IPSSM)"))
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships, risk_score = risk_score)
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
data$cancer_type <- factor(data$cancer_type, levels = c("AML", "MDS", "CMML", "MPN")
colors <- hcl.colors(4, "Red-Blue")
data$cancer_type <- factor(data$cancer_type, levels = c("AML", "MDS", "CMML", "MPN"))
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
risk_score <- factor(risk_score, levels = c("Adverse (ELN2022)", "Intermediate (ELN2022)", "Favorable (ELN2022)",
"Very High (IPSSM)", "High (IPSSM)", "Moderate High (IPSSM)",
"Moderate Low (IPSSM)", "Low (IPSSM)", "Very Low (IPSSM)", "NA"))
risk_score <- as.factor(risk_score)
risk_score <- factor(risk_score, levels = c("Adverse (ELN2022)", "Intermediate (ELN2022)", "Favorable (ELN2022)",
"Very High (IPSSM)", "High (IPSSM)", "Moderate High (IPSSM)",
"Moderate Low (IPSSM)", "Low (IPSSM)", "Very Low (IPSSM)", "NA"))
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships, risk_score = risk_score)
data$cancer_type <- factor(data$cancer_type, levels = c("AML", "MDS", "CMML", "MPN"))
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
levels(risk_score)
risk_score <- factor(risk_score, levels = c("Adverse (ELN2022)", "Intermediate (ELN2022)", "Favorable (ELN2022)",
"Very High (IPSSM)", "High (IPSSM)", "Moderate High (IPSSM)",
"Moderate Low (IPSSM)", "Low (IPSSM)", "Very Low (IPSSM)", NA))
# Create a data frame with the two classification vectors
data <- data.frame(cancer_type = cancer_type, sample_memberships = sample_memberships, risk_score = risk_score)
data$cancer_type <- factor(data$cancer_type, levels = c("AML", "MDS", "CMML", "MPN"))
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
levels(risk_score)
data$cancer_type <- factor(data$cancer_type, levels = c("CMML", "MPN","AML", "MDS"))
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
TRUE | FALSE
TRUE || FALSE
(data$cancer_type=="AML")|(data$cancer_type=="MDS")
(data$cancer_type=="AML")||(data$cancer_type=="MDS")
(data$cancer_type=="AML")|(data$cancer_type=="MDS")
data
data[data$cancer_type=="AML",]
data <- rappend(data[data$cancer_type=="AML",], data[data$cancer_type=="MDS",])
data <- rbind(data[data$cancer_type=="AML",], data[data$cancer_type=="MDS",])
data
data <- rbind(data[data$cancer_type=="AML",], data[data$cancer_type=="MDS",])
colors <- hcl.colors(4, "Red-Blue")
my_color2 <- c("#DD7788", "#117777", "#771122", "#DDDD77")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
my_color2 <- c("#DD7788", "#771122")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis3 = sample_memberships, axis2 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
# create alluvial plot
ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships, axis3 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none")
library("extrafont")
loadfonts()
pdf("~/Desktop/sankey_risk_scores", height = 12, width = 10,
family = "Arial", paper = "special", onefile = FALSE)
# family = "Times New Roman", paper = "special", onefile = FALSE)
op <- par(mar = c(5, 4, 0.05, 0.05) + 0.1)
p1
# create alluvial plot
p1 <- ggplot(data = data,
aes(axis1 = cancer_type, axis2 = sample_memberships, axis3 = risk_score)) +
geom_alluvium(aes(fill = cancer_type)) +
geom_stratum(aes(fill = cancer_type)) +
geom_text(stat = "stratum",
aes(label = after_stat(stratum))) +
scale_x_discrete(limits = c("Survey", "Response"),
expand = c(0.15, 0.05)) +
scale_fill_manual(values = my_color2) +
theme_void() +
theme(legend.position = "none"); p1
library("extrafont")
loadfonts()
pdf("~/Desktop/sankey_risk_scores", height = 12, width = 10,
family = "Arial", paper = "special", onefile = FALSE)
# family = "Times New Roman", paper = "special", onefile = FALSE)
op <- par(mar = c(5, 4, 0.05, 0.05) + 0.1)
p1
par(op)
dev.off()
library("extrafont")
loadfonts()
pdf("~/Desktop/sankey_risk_scores.pdf", height = 12, width = 10,
family = "Arial", paper = "special", onefile = FALSE)
# family = "Times New Roman", paper = "special", onefile = FALSE)
op <- par(mar = c(5, 4, 0.05, 0.05) + 0.1)
p1
par(op)
dev.off()
library("extrafont")
loadfonts()
pdf("~/Desktop/sankey_risk_scores.pdf", height = 9, width = 5,
family = "Arial", paper = "special", onefile = FALSE)
# family = "Times New Roman", paper = "special", onefile = FALSE)
op <- par(mar = c(5, 4, 0.05, 0.05) + 0.1)
p1
par(op)
dev.off()
library("extrafont")
loadfonts()
pdf("~/Desktop/sankey_risk_scores.pdf", height = 4, width = 9,
family = "Arial", paper = "special", onefile = FALSE)
# family = "Times New Roman", paper = "special", onefile = FALSE)
op <- par(mar = c(5, 4, 0.05, 0.05) + 0.1)
p1
par(op)
dev.off()
library("extrafont")
loadfonts()
pdf("~/Desktop/sankey_risk_scores.pdf", height = 4, width = 11,
family = "Arial", paper = "special", onefile = FALSE)
# family = "Times New Roman", paper = "special", onefile = FALSE)
op <- par(mar = c(5, 4, 0.05, 0.05) + 0.1)
p1
par(op)
dev.off()
library("extrafont")
loadfonts()
pdf("~/Desktop/sankey_risk_scores.pdf", height = 5, width = 12,
family = "Arial", paper = "special", onefile = FALSE)
# family = "Times New Roman", paper = "special", onefile = FALSE)
op <- par(mar = c(5, 4, 0.05, 0.05) + 0.1)
p1
par(op)
dev.off()
setwd("~/Documents/phd_main/projects/collaboration_marco/DiagChallenge/euler_cluster_26")
# get the best performing seed and corresponding DAGs + memberships
library(graphClust)
rm(list=ls())
assignprogressList <- list()
seeds <- c(1:79,81:100)
# seeds <- 1:100
for (i in seeds){
assignprogressList[i] <- readRDS(paste0("euler_results/memberships_seed_",i,".rds"))$assignprogress
}
best_seed <- graphClust:::getBestSeed(assignprogressList)
best_seed
assignprogressList
graphClust:::getBestSeed(assignprogressList)
assignprogressList[i]
assignprogressList[[2]]
assignprogressList[[3]]
best_res <- readRDS(paste0("euler_results/memberships_seed_",3,".rds"))
levels(best_res$clustermembership)
table(best_res$clustermembership)
best_res <- readRDS(paste0("euler_results/memberships_seed_",95,".rds"))
table(best_res$clustermembership)
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::py_last_error
reticulate::repl_python()
reticulate::repl_python()
k
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
reticulate::repl_python()
library(clustNet)
all_data <- read.csv("../mds_only.csv")#[,c(1:65,71:74,77:78)]
# remove survival data, classifications and patient id 
index_remove <- c(which(colnames(all_data)=="ID"), which(colnames(all_data)=="OS"), 
                  which(colnames(all_data)=="OS_STATUS"), which(colnames(all_data)=="IPSSR_ELN"), 
                  which(colnames(all_data)=="WHO_2016"), which(colnames(all_data)=="WHO_2022"),
                  which(colnames(all_data)=="ICC"), which(colnames(all_data)=="ELN2022_IPSSM"))
mut_cov_data <- all_data[,-index_remove]
rownames(mut_cov_data) <- all_data$ID
# string_edgepmat <- as.matrix(read.table("../data/string-edgepmat.txt"))[-58,-58]
# blacklist_edgepmat <- as.matrix(read.table("../data/blacklist-edgepmat.txt"))[-58,-58]
# define covariates
n_cov <- 2
# clustering
set.seed(seednumber) # set seed
set.seed(1234) # set seed
typeof(mut_cov_data)
typeof(mut_cov_data$SEX)
typeof(mut_cov_data$AGE)
apply(typeof,2,mut_cov_data)
apply(1,typeof,mut_cov_data)
apply(1,typeof)
apply(1,mut_cov_data,typeof))
apply(1,mut_cov_data,typeof)
apply(2,mut_cov_data,typeof)
lapply(mut_cov_data,typeof)
lapply(mut_cov_data,unique)
