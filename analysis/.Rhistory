library(ggplot2)
library(survival)
library(dplyr)
# Load required libraries
library(survival)
library(survminer)
# Prepare session, load packages
rm(list=ls())
library(survival)
library(RColorBrewer)
# Load classification by mutation profile (cluster assignment) # CLUSTERS
#cluster_res <- readRDS("../results/euler_memberships_final_9.rds")
# cluster_res <- readRDS("./results/euler_memberships_final_26.rds")
cluster_res <- readRDS("../results/euler_memberships_8k_9clusters.rds")
# remove this line in the future (after package update on euler)
# cluster_res$clustermembership <- cluster_res$clustermembership[[1]]
# cluster_res <- readRDS("../results/custer_res.rds")
table(cluster_res$clustermembership)
# mut_cov_data <- read.csv("../data/undivided_binary_matrix.csv")
# import survival data
survdata <- read.csv("../data/diagCorrected_aml_mds_matrix_8k_new.csv")
# survdata$last_fu <- as.Date(survdata$last_fu, format = "%d.%m.%Y")
# survdata$firstdiagnosis_date <- as.Date(survdata$firstdiagnosis_date, format = "%d.%m.%Y")
# survdata$relapse_date <- as.Date(survdata$relapse_date, format = "%d.%m.%Y")
# survdata$type <- as.factor(survdata$)
survdata$WHO_2016 <- as.factor(survdata$WHO_2016)
survdata$WHO_2022 <- as.factor(survdata$WHO_2022)
#survdata$IPSSR_ELN <- as.factor(survdata$IPSSR_ELN)
survdata$ELN2022_IPSSM <- as.factor(survdata$ELN2022_IPSSM)
survdata$Cluster <- cluster_res$clustermembership
survdata$Cluster <- as.factor(survdata$Cluster)
levels(survdata$Cluster) <- LETTERS[1:length(unique(survdata$Cluster))]
survdata <- survdata[!(survdata$ELN2022_IPSSM) %in% "IPSSM_NA",]
pfsdata <- read.delim("../data/IPSSM_df_clinical.tsv")
pfsdata <- pfsdata[, c("ID","AMLt_YEARS","AMLt_STATUS","LFS_YEARS","LFS_STATUS")]
survdata <- merge(survdata,pfsdata, by = "ID")
survdata$WHO_2016 <- as.factor(survdata$WHO_2016)
survdata$WHO_2022 <- as.factor(survdata$WHO_2022)
#survdata$IPSSR_ELN <- as.factor(survdata$IPSSR_ELN)
survdata$ICC <- as.factor(survdata$ICC)
lab <- c("UHR","HR1","NPM1","HR2","INT2","HR3","INT1","LR1","LR2")
levels(survdata$Cluster) <- lab
survdata <- survdata[grep("MDS/AML",survdata$ICC),]
p <- c()
for(i in unique(survdata$ICC)){
subdata <- survdata[survdata$ICC== i,]
group_count <- subdata %>%
group_by(Cluster) %>%
dplyr::summarise(n = n())
filtered_groups <- group_count %>%
filter(n >= 10) %>%
pull(Cluster)
# Create a new DataFrame containing only the rows where group appears 5 or more times
subdata <- subdata %>%
filter(Cluster %in% filtered_groups)
# merge clinical information and cluster membership
clinical <- list()
clinical$event <- c(subdata$AMLt_STATUS,subdata$AMLt_STATUS)
clinical$time <- c(subdata$AMLt_YEARS,subdata$AMLt_YEARS)
clinical$group <- c(subdata$ICC,subdata$Cluster)
clinical$type <- c(subdata$WHO_2016,subdata$WHO_2016)
# THESE NOW MATCH
length(clinical$group)
length(clinical$time)
table(clinical$group)
# Kaplan-Meier curve for groups
nb.cols <- length(unique(cluster_res$clustermembership))
#
#
colours_clusters <- c("blue", "#2f0000","#9B2226","#94D2BD","#BB3E03","#E9D8A6","#CA6702","#EE9B00","#0A9396","#005F73")# "#000000","#772266","#117777","#771122aa","#114477","#CC99BBcc","#88CCAA","#117744","#77AADD")
#plot(survfit(Surv(time = as.numeric(time), event = as.numeric(event)) ~ group, data = clinical), col=colourysdots, ylab='Survival probability', xlab='Survival (years)', mark.time = T)
#legend(x = 12.9, y = 1.0, legend = paste(levels(clinical$group), sep=' '), pch = 15, col=colourysdots, cex=1, ncol = 2,title="Cluster", bg='white')
mypal=colours_clusters[c(1, c(seq(1:9)+1)[lab %in% unique(clinical$group)[grep(x = unique(clinical$group), pattern = i, invert = T)]])]
dimensione=length(mypal)-1
os <- survfit(Surv(time = as.numeric(time), event = as.numeric(event)) ~ group, data = clinical)
library("survminer")
#file<-paste0("../figures/Supp_",gsub("MDS/AML ", "MDSAML_",i),".png")
#png(filename = file, width = 2300, height = 2000, res = 280)
p[i] <- ggsurvplot(
os,                     # survfit object with calculated statistics.
data = clinical,             # data used to fit survival curves.
#palette = colours_clusters,#colours_clusters, # personalized colours
palette = alpha(mypal,c(1,rep(0.55, dimensione))),
# legend.labs = sort(as.character(unique(survdata$Cluster))),
risk.table = F,       # show risk table.
pval = T,             # show p-value of log-rank test.
conf.int = F,         # show confidence intervals for
# point estimates of survival curves.
xlim = c(0,10),         # was c(0,14.4)
# survival estimates.
xlab = "Time in years",   # customize X axis label.
ylab = "Transformation probability",   # customize X axis label.
break.time.by = 1,     # break X axis in time intervals by 500.
ggtheme = theme_light(), # customize plot and risk table with a theme.
risk.table.y.text.col = T, # colour risk table text annotations.
risk.table.fontsize = 3,
pval.size =4,
legend.labs = c(unique(clinical$group)[1], sort(unique(clinical$group)[2:length(clinical$group)])),
title= paste0("Time to AML transformation - ", gsub(pattern = "_", replacement = " ", i), " (n=",length(clinical$event)/2,")"),
risk.table.y.text = FALSE # show bars instead of names in text annotations
# in legend of risk table
)
print(p[i])
#dev.off()
}
pdf(file = "./figures//SuppS9_tAML.pdf", width = 16.7, height = 10)
ggarrange(p$`MDS/AML MR-Cyto`,p$`MDS/AML MR-Gen`, p$`MDS/AML TP53`, p$`MDS/AML NOS`, ncol = 2, nrow = 2 , labels = letters[1:4])
dev.off()
##### ALLUVIAL
library(ggalluvial)
library(graphClust)
# Prepare session, load packages
rm(list=ls())
library(survival)
library(RColorBrewer)
# Load classification by mutation profile (cluster assignment) # CLUSTERS
cluster_res <- readRDS("../results/euler_memberships_8k_9clusters.rds")
table(cluster_res$clustermembership)
mutation_covariate_data <- read.csv("../data/undivided_binary_only_matrix_8k.csv")
survdata <- read.csv("../data/diagCorrected_aml_mds_matrix_8k_new.csv")
survdata$clustermembership <- cluster_res$clustermembership
survdata$clustermembership <- as.factor(survdata$clustermembership)
levels(survdata$clustermembership) <- LETTERS[1:length(unique(cluster_res$clustermembership))]
survdata <- survdata[!survdata$ELN2022_IPSSM == "IPSSM_NA",]
survdata <- survdata[!survdata$IPSSR_ELN == "IPSSR_NA",]
# create alluvial plot
#
# allu <- ggplot(data = survdata,
#                aes(axis2 = WHO_2016, axis3 = WHO_2022, axis4 = ICC, axis1 = ELN2022_IPSSM )) +
#   geom_alluvium(aes(fill = ELN2022_IPSSM)) +
#   geom_stratum(width=0.50) +
#   geom_text(stat = "stratum",
#             aes(label = after_stat(stratum)),size= 3) +
#   scale_x_discrete(limits = c("WHO_2016", "WHO_2022", "ICC", "ELN2022_IPSSM"),
#                    expand = c(0.1, 0.15, 0.1, 0.05)) +
#   # theme_void() +
#     theme(legend.position = "none") ; allu
allu <- ggplot(data = survdata,
aes(axis2 = WHO_2016, axis3 = WHO_2022, axis4 = ICC, axis1 = ELN2022_IPSSM)) +
geom_alluvium(aes(fill = ELN2022_IPSSM)) +
geom_stratum(width = 0.50) +
geom_text(stat = "stratum", aes(label = after_stat(stratum)), size = 3) +
scale_x_discrete(limits = c("ELN2022_IPSSM","WHO_2016", "WHO_2022", "ICC"),
expand = c(0.1, 0.15, 0.1, 0.05)) +
theme_void() +
theme(legend.position = "none",
axis.text.x = element_text(size = 13, vjust = 2), # Adjust the margin to reduce space
plot.margin = unit(c(-1, -.5, 0, -.5), "lines")); allu # Customize the x-axis text appearance
# allu <- ggplot(data = survdata,
#                aes(axis2 = WHO_2016, axis3 = WHO_2022, axis4 = ICC, axis1 = ELN2022_IPSSM)) +
#   geom_alluvium(aes(fill = ELN2022_IPSSM)) +
#   geom_stratum(width = 0.50) +
#   geom_label(stat = "stratum", aes(label = after_stat(stratum)), size = 3,
#              position = position_nudge(x = -0.25), # Nudge labels to the side
#              hjust = 0, vjust = 0.5, # Adjust horizontal and vertical justification
#              label.size = NA, # Remove label border
#              fill = "white") + # White background for labels
#   scale_x_discrete(limits = c("ELN2022_IPSSM","WHO_2016", "WHO_2022", "ICC"),
#                    expand = c(0.1, 0.15, 0.1, 0.05)) +
#   theme_void() +
#   theme(legend.position = "none",
#         axis.text.x = element_text(angle = 90, hjust = 0.6))
# allu
png(filename = "./figures/Supp_Alluvial.png", width = 2400, height = 3000, res = 150)
allu
dev.off()
library(graphClust)
library(scales)
library(ggplot2)
library(ggpubr)
library(survival)
rm(list=ls())
library(survival)
library(RColorBrewer)
# Load classification by mutation profile (cluster assignment) # CLUSTERS
#cluster_res <- readRDS("../results/euler_memberships_final_9.rds")
# cluster_res <- readRDS("./results/euler_memberships_final_26.rds")
cluster_res <- readRDS("../results/euler_memberships_8k_9clusters.rds")
table(cluster_res$clustermembership)
groups <- data.frame(cluster_res$clustermembership)
groups$ID <- rownames(cluster_res$data)
colnames(groups)[1] <- "Cluster"
groups$Cluster <- as.factor(groups$Cluster)
lab <- c("UHR","HR1","NPM1","HR2","INT2","HR3","INT1","LR1","LR2")
levels(groups$Cluster) <- lab # LETTERS[1:length(unique(groups$Cluster))]
# import survival data
survdata <- read.csv("../data/diagCorrected_aml_mds_matrix_8k_new.csv")
colnames(survdata)[34:46] <- c("+8", "complex", "-17", "-5", "-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
data <- merge(survdata,groups,by="ID")
library(dplyr)
library(ggplot2)
# Calculate the total number of mutations per patient
data <- data %>%
mutate(total_mutations = rowSums(select(., ASXL1:NRAS, +8:"t(v;11)")))
# Calculate the average number of mutations per "Cluster"
avg_mutations_per_cluster <- data %>%
group_by(Cluster) %>%
summarize(avg_mutations = mean(total_mutations))
# View the average mutations per cluster
print(avg_mutations_per_cluster)
# Create a boxplot showing the number of mutations per "Cluster"
tmb <- ggplot(data, aes(x = Cluster, y = total_mutations, fill=Cluster)) +
geom_boxplot() +
scale_fill_manual(values=c("UHR"="#1f0000","HR1"="#9B2226","NPM1"="#94D2BD","HR2"="#BB3E03","INT2"="#E9D8A6","HR3"="#CA6702","INT1"= "#EE9B00","LR1"="#0A9396","LR2"="#005F73"))+
labs(title = "Number of mutations per Cluster",
x = "Cluster",
y = "Number of mutations")+
theme_minimal()
library(dplyr)
# Assuming data is the name of your data frame
avg_blasts_per_cluster <- data %>%
group_by(Cluster) %>%
summarize(avg_blasts = median(BM_BLASTS, na.rm = TRUE))
# Print the average BM_BLASTS per cluster
print(avg_blasts_per_cluster)
blast <- ggplot(data, aes(x = Cluster, y = BM_BLASTS, fill = Cluster)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values=c("UHR"="#1f0000","HR1"="#9B2226","NPM1"="#94D2BD","HR2"="#BB3E03","INT2"="#E9D8A6","HR3"="#CA6702","INT1"= "#EE9B00","LR1"="#0A9396","LR2"="#005F73"))+
labs(title = "BM Blasts per Cluster",
x = "Cluster",
y = "Blasts (%)") +
theme_minimal()
# png(filename = "../results/9_blasts.png", width = 1200, height = 700, res = 150)
# blast
# dev.off()
png(filename = "../figures/SuppS4.png", width = 3000, height = 1300, res = 200)
ggarrange(blast,tmb, labels = c("a","b"))
dev.off()
library(graphClust)
library(scales)
library(ggplot2)
library(ggpubr)
library(survival)
rm(list=ls())
library(survival)
library(RColorBrewer)
# Load classification by mutation profile (cluster assignment) # CLUSTERS
#cluster_res <- readRDS("../results/euler_memberships_final_9.rds")
# cluster_res <- readRDS("./results/euler_memberships_final_26.rds")
cluster_res <- readRDS("../results/euler_memberships_8k_9clusters.rds")
table(cluster_res$clustermembership)
groups <- data.frame(cluster_res$clustermembership)
groups$ID <- rownames(cluster_res$data)
colnames(groups)[1] <- "Cluster"
groups$Cluster <- as.factor(groups$Cluster)
lab <- c("UHR","HR1","NPM1","HR2","INT2","HR3","INT1","LR1","LR2")
levels(groups$Cluster) <- lab # LETTERS[1:length(unique(groups$Cluster))]
# import survival data
survdata <- read.csv("../data/diagCorrected_aml_mds_matrix_8k_new.csv")
colnames(survdata)[34:46] <- c("+8", "complex", "-17", "-5", "-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
data <- merge(survdata,groups,by="ID")
library(dplyr)
library(ggplot2)
# Calculate the total number of mutations per patient
data <- data %>%
mutate(total_mutations = rowSums(select(., ASXL1:NRAS, +8:"t(v;11)")))
# Calculate the average number of mutations per "Cluster"
avg_mutations_per_cluster <- data %>%
group_by(Cluster) %>%
summarize(avg_mutations = mean(total_mutations))
# View the average mutations per cluster
print(avg_mutations_per_cluster)
# Create a boxplot showing the number of mutations per "Cluster"
tmb <- ggplot(data, aes(x = Cluster, y = total_mutations, fill=Cluster)) +
geom_boxplot() +
scale_fill_manual(values=c("UHR"="#1f0000","HR1"="#9B2226","NPM1"="#94D2BD","HR2"="#BB3E03","INT2"="#E9D8A6","HR3"="#CA6702","INT1"= "#EE9B00","LR1"="#0A9396","LR2"="#005F73"))+
labs(title = "Number of mutations per Cluster",
x = "Cluster",
y = "Number of mutations")+
theme_minimal()
library(dplyr)
# Assuming data is the name of your data frame
avg_blasts_per_cluster <- data %>%
group_by(Cluster) %>%
summarize(avg_blasts = median(BM_BLASTS, na.rm = TRUE))
# Print the average BM_BLASTS per cluster
print(avg_blasts_per_cluster)
blast <- ggplot(data, aes(x = Cluster, y = BM_BLASTS, fill = Cluster)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values=c("UHR"="#1f0000","HR1"="#9B2226","NPM1"="#94D2BD","HR2"="#BB3E03","INT2"="#E9D8A6","HR3"="#CA6702","INT1"= "#EE9B00","LR1"="#0A9396","LR2"="#005F73"))+
labs(title = "BM Blasts per Cluster",
x = "Cluster",
y = "Blasts (%)") +
theme_minimal()
# png(filename = "../results/9_blasts.png", width = 1200, height = 700, res = 150)
# blast
# dev.off()
png(filename = "./figures/SuppS4.png", width = 3000, height = 1300, res = 200)
ggarrange(blast,tmb, labels = c("a","b"))
dev.off()
levels(data$Cluster)
data$Cluster <- factor(data$Cluster, levels= c("UHR","HR1", "HR2", "HR3", "INT1", "INT2", "NPM1","LR1" , "LR2") )
library(graphClust)
library(scales)
library(ggplot2)
library(ggpubr)
library(survival)
rm(list=ls())
library(survival)
library(RColorBrewer)
# Load classification by mutation profile (cluster assignment) # CLUSTERS
#cluster_res <- readRDS("../results/euler_memberships_final_9.rds")
# cluster_res <- readRDS("./results/euler_memberships_final_26.rds")
cluster_res <- readRDS("../results/euler_memberships_8k_9clusters.rds")
table(cluster_res$clustermembership)
groups <- data.frame(cluster_res$clustermembership)
groups$ID <- rownames(cluster_res$data)
colnames(groups)[1] <- "Cluster"
groups$Cluster <- as.factor(groups$Cluster)
lab <- c("UHR","HR1","NPM1","HR2","INT2","HR3","INT1","LR1","LR2")
levels(groups$Cluster) <- lab # LETTERS[1:length(unique(groups$Cluster))]
# import survival data
survdata <- read.csv("../data/diagCorrected_aml_mds_matrix_8k_new.csv")
colnames(survdata)[34:46] <- c("+8", "complex", "-17", "-5", "-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
data <- merge(survdata,groups,by="ID")
data$Cluster <- factor(data$Cluster, levels= c("UHR","HR1", "HR2", "HR3", "INT1", "INT2", "NPM1","LR1" , "LR2") )
library(dplyr)
library(ggplot2)
# Calculate the total number of mutations per patient
data <- data %>%
mutate(total_mutations = rowSums(select(., ASXL1:NRAS, +8:"t(v;11)")))
# Calculate the average number of mutations per "Cluster"
avg_mutations_per_cluster <- data %>%
group_by(Cluster) %>%
summarize(avg_mutations = mean(total_mutations))
# View the average mutations per cluster
print(avg_mutations_per_cluster)
# Create a boxplot showing the number of mutations per "Cluster"
tmb <- ggplot(data, aes(x = Cluster, y = total_mutations, fill=Cluster)) +
geom_boxplot() +
scale_fill_manual(values=c("UHR"="#1f0000","HR1"="#9B2226","NPM1"="#94D2BD","HR2"="#BB3E03","INT2"="#E9D8A6","HR3"="#CA6702","INT1"= "#EE9B00","LR1"="#0A9396","LR2"="#005F73"))+
labs(title = "Number of mutations per Cluster",
x = "Cluster",
y = "Number of mutations")+
theme_minimal()
library(dplyr)
# Assuming data is the name of your data frame
avg_blasts_per_cluster <- data %>%
group_by(Cluster) %>%
summarize(avg_blasts = median(BM_BLASTS, na.rm = TRUE))
# Print the average BM_BLASTS per cluster
print(avg_blasts_per_cluster)
blast <- ggplot(data, aes(x = Cluster, y = BM_BLASTS, fill = Cluster)) +
geom_boxplot(outlier.shape = NA) +
scale_fill_manual(values=c("UHR"="#1f0000","HR1"="#9B2226","NPM1"="#94D2BD","HR2"="#BB3E03","INT2"="#E9D8A6","HR3"="#CA6702","INT1"= "#EE9B00","LR1"="#0A9396","LR2"="#005F73"))+
labs(title = "BM Blasts per Cluster",
x = "Cluster",
y = "Blasts (%)") +
theme_minimal()
# png(filename = "../results/9_blasts.png", width = 1200, height = 700, res = 150)
# blast
# dev.off()
png(filename = "./figures/SuppS4.png", width = 3000, height = 1300, res = 200)
ggarrange(blast,tmb, labels = c("a","b"))
dev.off()
# get bar plots of cluster assignment
rm(list=ls())
library(reshape2)
library(ggplot2)
library(ggpubr)
library(clustNet)
# read data
cluster_results <- readRDS("../results/euler_memberships_8k_9clusters.rds")
mutation_covariate_data <- read.csv("../data/undivided_binary_only_matrix_8k.csv")
data <- read.csv("../data/diagCorrected_aml_mds_matrix_8k_new.csv")
colnames(mutation_covariate_data)[34:46] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
colnames(cluster_results$data)[33:45] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
for(i in 1:length(cluster_results$DAGs)){
rownames(cluster_results$DAGs[[i]])[33:45] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
#rownames(cluster_results$DAGs[[i]])[c(65:70)]<- c("BM Blasts", "Hb", "Plt", "Wbc","Age","Sex")
colnames(cluster_results$DAGs[[i]])[33:45] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
#colnames(cluster_results$DAGs[[i]])[c(65:70)]<- c("BM Blasts", "Hb", "Plt", "Wbc","Age","Sex")
}
# plot graphs with constant node size
#graphClust::plot_clusters(cluster_results)
# and with entropy node size
all_data <- mutation_covariate_data
index_remove <- c(which(colnames(all_data)=="ID"), which(colnames(all_data)=="OS"), which(colnames(all_data)=="OS_STATUS"), which(colnames(all_data)=="IPSSR_ELN"), which(colnames(all_data)=="WHO_2016"),which(colnames(all_data)=="WHO_2022"),which(colnames(all_data)=="ICC"),which(colnames(all_data)=="ELN2022_IPSSM"))
mut_cov_data <- all_data[,-index_remove]
node_colours <- c(rep("#92a8d1",32),rep("#064273",13) , rep("#ff727c",4), rep("#708090",2))
netplot <- clustNet::plot_clusters(cluster_results,  directed = F, node_colours = node_colours)
plot_clusters2 <- function (cluster_results, node_colours = "#fdae61", scale_entropy = FALSE,
directed = TRUE)
{
if (!requireNamespace("ggpubr", quietly = TRUE)) {
stop("Package \"ggpubr\" must be installed to use this function.",
call. = FALSE)
}
data <- as.data.frame(cluster_results$data)
node_size <- NULL
if (!is.null(data)) {
k_clust <- length(cluster_results$DAGs)
total_entropies <- sapply(data, function(x) entropy(x))
cluster_dim <- c()
diff_entropies <- matrix(NA, nrow = k_clust, ncol = ncol(data))
binary_frequency <- matrix(NA, nrow = k_clust, ncol = ncol(data))
for (nn in 1:k_clust) {
cluster_data <- data[cluster_results$clustermembership ==
nn, ]
cluster_dim[nn] <- dim(cluster_data)[1]
cluster_entropies <- sapply(cluster_data, function(x) entropy(x))
diff_entropies[nn, ] <- cluster_entropies - total_entropies
binary_frequency[nn, ] <- sapply(cluster_data, function(x) sum(x))
}
binary_frequency <- sweep(binary_frequency, 1, cluster_dim,
FUN = "/")
binary_frequency_temp <- binary_frequency
max_col_values <- apply(binary_frequency_temp, 2, max)
node_size_percentage_frequ_temp <- sweep(binary_frequency_temp,
2, max_col_values, FUN = "/")
node_size <- 1.5 + node_size_percentage_frequ_temp *
4
if (scale_entropy) {
node_size_percentage <- 1 - (diff_entropies[, ] +
abs(min(diff_entropies[, ])))/(max(diff_entropies[,
]) + abs(min(diff_entropies[, ])))
node_size <- 1.5 + node_size_percentage * 6
}
}
p_list <- list()
k_clust <- length(cluster_results$DAGs)
for (ii in 1:k_clust) {
my_DAG <- cluster_results$DAGs[ii][[1]]
p_list[[ii]] <- nice_DAG_plot(my_DAG, print_direct = FALSE,
node_size = node_size[ii, ], node_colours = node_colours,
directed = directed)
}
lab <- c("UHR","HR1","NPM1","HR2","INT2","HR3","INT1","LR1","LR2")
ggpubr::ggarrange(plotlist = p_list, labels = paste(lab)) #"Cluster", LETTERS[1:k_clust],"-",
}
library(entropy)
netplot2 <- plot_clusters2(cluster_results,  directed = F, node_colours = node_colours)
netplot2
# get bar plots of cluster assignment
library(reshape2)
library(ggplot2)
library(ggpubr)
library(RColorBrewer)
# read data
#cluster_results <- readRDS("../results/euler_memberships_final_9.rds")
cluster_results <- readRDS("../results/euler_memberships_8k_9clusters.rds")
table(cluster_results$clustermembership)
mutation_covariate_data <- read.csv("../data/diagCorrected_aml_mds_matrix_8k_new.csv")
table(cluster_results$clustermembership)
#colnames(mutation_covariate_data)[43:65] <- c("+11","+13","+21", "+22", "+8", "complex", "-12", "del(17p)/-17","-18", "-20", "-3", "-5/-5q", "-7/-7q", "-9", "inv(16)","inv(3)",
#                                              "-Y", "t(15;17)", "t(6;9)", "t(8;21)",  "t(9;11)",  "t(9;22)", "t(v;11)")
colnames(mutation_covariate_data)[34:46] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
#colnames(mutation_covariate_data)[c(71:74,77,78)] <- c("BM Blasts", "Hb", "Plt", "Wbc","Age","Sex")
#colnames(cluster_results$data)[42:64] <- c("+11","+13","+21", "+22", "+8", "complex", "-12", "del(17p)/-17","-18", "-20", "-3", "-5/-5q", "-7/-7q", "-9", "inv(16)","inv(3)",
# "-Y", "t(15;17)", "t(6;9)", "t(8;21)",  "t(9;11)",  "t(9;22)", "t(v;11)")
#colnames(cluster_results$data)[c(65:70)] <- c("BM Blasts", "Hb", "Plt", "Wbc","Age","Sex")
colnames(cluster_results$data)[33:45] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
for(i in 1:length(cluster_results$DAGs)){
rownames(cluster_results$DAGs[[i]])[33:45] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
#rownames(cluster_results$DAGs[[i]])[c(65:70)]<- c("BM Blasts", "Hb", "Plt", "Wbc","Age","Sex")
colnames(cluster_results$DAGs[[i]])[33:45] <- c("+8", "complex", "del(17p)/-17", "del(5q)/-5", "del(7q)/-7","inv(16)","inv(3)","t(15;17)","t(6;9)", "t(8;21)","t(9;11)","t(9;22)","t(v;11)")
#colnames(cluster_results$DAGs[[i]])[c(65:70)]<- c("BM Blasts", "Hb", "Plt", "Wbc","Age","Sex")
}
#FILL OF MISSING IPSS-R AND IPSS-M
#mutation_covariate_data$IPSSR_ELN[mutation_covariate_data$IPSSR_ELN=="IPSSR_NA"] <- "IPSSR_Int"
mutation_covariate_data$ELN2022_IPSSM[mutation_covariate_data$ELN2022_IPSSM=="IPSSM_NA"] <- "IPSSM_Moderate-High"
### GENE BARPLOTS
# BARPLOT WITH MUTATIONS
#FILL OF MISSING IPSS-R AND IPSS-M
library(ggplot2)
library(reshape2)
#mutation_covariate_data$IPSSR_ELN[mutation_covariate_data$IPSSR_ELN=="IPSSR_NA"] <- "IPSSR_Int"
mutation_covariate_data$ELN2022_IPSSM[mutation_covariate_data$ELN2022_IPSSM=="IPSSM_NA"] <- "IPSSM_Moderate-High"
mutation_covariate_data <- cbind(mutation_covariate_data,cluster_results$clustermembership)
mutation_select <- mutation_covariate_data
subdata <- mutation_select[,c(2:46,60)]
mutation_sum <- aggregate(subdata, by = list(subdata$`cluster_results$clustermembership`), FUN = sum)
mutation_sum <- as.data.frame(mutation_sum)
mutation_sum$`cluster_results$clustermembership` <- NULL
# Reshape the data for plotting
melted_data <- melt(mutation_sum, id.vars = "Group.1")
colnames(melted_data)[1] <- "Cluster"
# Reshape the data for stacked barplot (sum of mutations)
melted_data_sum <- melt(mutation_sum, id.vars = "Group.1")
colnames(melted_data_sum)[1] <- "Cluster"
levels(melted_data_sum$Cluster) <- LETTERS[1:length(unique(cluster_results$clustermembership))]
lab <- c("UHR","HR1","NPM1","HR2","INT2","HR3","INT1","LR1","LR2")
melted_data_sum$Cluster[melted_data_sum$Cluster=="1"] <- lab[1]
melted_data_sum$Cluster[melted_data_sum$Cluster=="2"] <- lab[2]
melted_data_sum$Cluster[melted_data_sum$Cluster=="3"] <- lab[3]
melted_data_sum$Cluster[melted_data_sum$Cluster=="4"] <- lab[4]
melted_data_sum$Cluster[melted_data_sum$Cluster=="5"] <- lab[5]
melted_data_sum$Cluster[melted_data_sum$Cluster=="6"] <- lab[6]
melted_data_sum$Cluster[melted_data_sum$Cluster=="7"] <- lab[7]
melted_data_sum$Cluster[melted_data_sum$Cluster=="8"] <- lab[8]
melted_data_sum$Cluster[melted_data_sum$Cluster=="9"] <- lab[9]
#colours_clusters <- c("#000000","#772266","#117777","#7c1a29","#114477","#cd9bbc","#88CCAA","#117744","#77AADD")
colours_clusters <- c("#2f0000","#9B2226","#94D2BD","#BB3E03","#E9D8A6","#CA6702","#EE9B00","#0A9396","#005F73")
# Stacked barplot (sum of mutations)
barplot_sum0 <- ggplot(melted_data_sum, aes(x = variable, y = value, fill = Cluster)) +
geom_bar(stat = "identity") +
scale_fill_manual(values=c("UHR"="#1f0000","HR1"="#9B2226","NPM1"="#94D2BD","HR2"="#BB3E03","INT2"="#E9D8A6","HR3"="#CA6702","INT1"= "#EE9B00","LR1"="#0A9396","LR2"="#005F73"))+
xlab("Genes") +
ylab("Sum of mutations") +
theme_minimal() +
theme(axis.text.x = element_text(angle = 45, hjust = 1, size =10))+
theme(axis.text.y = element_text(size = 12),
axis.title.x = element_text(size = 0),
axis.title.y = element_text(size = 12))+
ggtitle(label = paste("Genetics")) + theme(plot.title = element_text(color="black", size=13, face="bold"))+
theme(legend.text=element_text(size=10), legend.title = element_text(size = 10))
pdf(file = "./figures/newfig1.pdf", width = 14, height = 17)
ggarrange(netplot2, barplot_sum0,
ncol = 1, nrow = 2 ,
labels = letters[1:6],
heights = c(1, .32))
dev.off()
